@use 'sass:math';

$base-width: 1440px;

@mixin vw(
  $property,
  $value,
  $min-value: null,
  $max-value: null,
  $min-screen: null,
  $max-screen: null
) {
  // Автоматическая Конвертация с пикселей в vw
  $value-px: $value * 1px;
  $min-value-px: if($min-value != null, $min-value * 1px, null);
  $max-value-px: if($max-value != null, $max-value * 1px, null);
  $min-screen-px: if($min-screen != null, $min-screen * 1px, null);
  $max-screen-px: if($max-screen != null, $max-screen * 1px, null);

  // Вычисляем значение в vw, корректно обрабатываем отрицательные значения
  $numeric-value: math.div(abs($value-px), 1px);
  $numeric-base: math.div($base-width, 1px);
  $result: math.div($numeric-value, $numeric-base) * 100vw;

  // Если значение отрицательное, добавляем знак минус
  @if $value < 0 {
    $result: -$result;
  }

  // Формируем строку для ограничения значения свойства
  $value-expression: #{$result};

  // Если заданы минимальное и/или максимальное значение свойства
  @if $min-value != null and $max-value != null {
    $value-expression: clamp(#{$min-value-px}, #{$result}, #{$max-value-px});
  } @else if ($min-value != null) {
    $value-expression: max(#{$min-value-px}, #{$result});
  } @else if ($max-value != null) {
    $value-expression: min(#{$result}, #{$max-value-px});
  }

  // Если заданы минимальная и максимальная ширина экрана
  @if $min-screen != null and $max-screen != null {
    #{$property}: $value-px;

    @media (min-width: #{$min-screen-px}) and (max-width: #{$max-screen-px}) {
      #{$property}: #{$value-expression};
    }
  } @else if $min-screen != null {
    #{$property}: $value-px;

    @media (min-width: #{$min-screen-px}) {
      #{$property}: #{$value-expression};
    }
  } @else if $max-screen != null {
    #{$property}: $value-px;

    @media (max-width: #{$max-screen-px}) {
      #{$property}: #{$value-expression};
    }
  } @else {
    #{$property}: #{$value-expression};
  }
}




// @mixin vw(
//   $property,          // CSS-свойство (например, margin, padding, width)
//   $value,             // Базовое значение свойства в пикселях (для $base-width)
//   $min-value: null,   // Минимальное значение свойства (опционально)
//   $max-value: null,   // Максимальное значение свойства (опционально)
//   $min-screen: null,  // Минимальная ширина экрана для применения (опционально)
//   $max-screen: null,  // Максимальная ширина экрана для применения (опционально)
//   $base-width: 1440   // Базовая ширина макета (по умолчанию 1440px)
// ) {
//   // Вычисляем значение в vw на основе $base-width
//   $value-vw: $value / $base-width * 100;

//   // Формируем строку для ограничения значения свойства через clamp/max/min
//   $value-expression: #{$value-vw}vw;

//   // Если указаны минимальные и/или максимальные значения
//   @if $min-value != null and $max-value != null {
//     $min-vw: $min-value / $base-width * 100;
//     $max-vw: $max-value / $base-width * 100;
//     $value-expression: clamp(#{$min-vw}vw, #{$value-vw}vw, #{$max-vw}vw);
//   } @else if ($min-value != null) {
//     $min-vw: $min-value / $base-width * 100;
//     $value-expression: max(#{$min-vw}vw, #{$value-vw}vw);
//   } @else if ($max-value != null) {
//     $max-vw: $max-value / $base-width * 100;
//     $value-expression: min(#{$value-vw}vw, #{$max-vw}vw);
//   }

//   // Если указаны ограничения по ширине экрана
//   @if $min-screen != null and $max-screen != null {
//     #{$property}: $value;

//     @media (min-width: #{$min-screen}px) and (max-width: #{$max-screen}px) {
//       #{$property}: #{$value-expression};
//     }
//   } @else if $min-screen != null {
//     #{$property}: $value;

//     @media (min-width: #{$min-screen}px) {
//       #{$property}: #{$value-expression};
//     }
//   } @else if $max-screen != null {
//     #{$property}: $value;

//     @media (max-width: #{$max-screen}px) {
//       #{$property}: #{$value-expression};
//     }
//   } @else {
//     // Применяем масштабирование без ограничений по ширине экрана
//     #{$property}: #{$value-expression};
//   }
// }


// $base-width: 1440px;

// @mixin vw(
//   $property,
//   $value,
//   $min-value: null,
//   $max-value: null,
//   $min-screen: null,
//   $max-screen: null
// ) {
//   // Преобразуем значения в пиксели
//   $value-px: $value * 1px;
//   $min-value-px: if($min-value != null, $min-value * 1px, null);
//   $max-value-px: if($max-value != null, $max-value * 1px, null);
//   $min-screen-px: if($min-screen != null, $min-screen * 1px, null);
//   $max-screen-px: if($max-screen != null, $max-screen * 1px, null);

//   // Вычисляем значение в vw
//   $numeric-value: abs($value-px) / 1px;
//   $numeric-base: $base-width / 1px;
//   $result: ($numeric-value / $numeric-base) * 100vw;

//   // Добавляем знак минус, если значение отрицательное
//   @if $value < 0 {
//     $result: -$result;
//   }

//   // Формируем строку для ограничения значений
//   $value-expression: $result;

//   // Обработка минимального и максимального значений
//   @if $min-value != null and $max-value != null {
//     $value-expression: clamp($min-value-px, $result, $max-value-px);
//   } @else if $min-value != null {
//     $value-expression: max($min-value-px, $result);
//   } @else if $max-value != null {
//     $value-expression: min($result, $max-value-px);
//   }

//   // Применение стилей
//   @if $min-screen != null and $max-screen != null {
//     @media (min-width: $min-screen-px) and (max-width: $max-screen-px) {
//       #{$property}: $value-expression;
//     }
//   } @else if $min-screen != null {
//     @media (min-width: $min-screen-px) {
//       #{$property}: $value-expression;
//     }
//   } @else if $max-screen != null {
//     @media (max-width: $max-screen-px) {
//       #{$property}: $value-expression;
//     }
//   } @else {
//     #{$property}: $value-expression;
//   }
// }





